<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>rest-service-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.2</version>
    </parent>

    <name>rest-service-demo</name>
	<description>Demo Project for Spring Boot</description>

    <properties>
        <start-class>com.example.restservice.RestServiceApplication</start-class>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
        <native.maven.plugin.version>0.9.28</native.maven.plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <build>
	<plugins>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>${native.maven.plugin.version}</version>
                <configuration>
                    <imageName>${project.artifactId}</imageName>
                    <mainClass>${exec.mainClass}</mainClass>
                    <buildArgs>
                        <!-- Quick build mode is enabled  -->
                        <buildArg>-Ob</buildArg>
                        <!-- G1 is supported on Linux only, comment out next line if on another platform -->
                        <buildArg>--gc=G1</buildArg>
                        <!-- Enable JFR support -->
                        <buildArg>--enable-monitoring=jfr</buildArg>
                        <!-- Show exception stack traces for exceptions during image building -->
                        <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                    </buildArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Create and instrumented native executable and run it BEFORE building the PGO version below -->
        <profile>
            <id>pgo-inst</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
			<version>${native.maven.plugin.version}</version>
                        <configuration>
                            <verbose>true</verbose>
                            <quickBuild>true</quickBuild>
                            <imageName>rest-service-demo-pgoinst</imageName>
                            <!-- <mainClass>${exec.mainClass}</mainClass> -->
                            <buildArgs combine.children="append">
                                <arg>--pgo-instrument</arg>
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
            
        <!-- Create the PGO version using the generated instrumented data above -->
        <profile>
            <id>pgo</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
			<version>${native.maven.plugin.version}</version>
                        <configuration>
                            <verbose>true</verbose>
                            <quickBuild>true</quickBuild>
                            <imageName>rest-service-demo-pgo</imageName>
                            <buildArgs combine.children="append">
                                <arg>--pgo=${project.basedir}/default.iprof</arg>
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
            
        <!-- Create a static version -->
        <profile>
            <id>static</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
			<version>${native.maven.plugin.version}</version>
                        <configuration>
                            <verbose>true</verbose>
			    <quickBuild>true</quickBuild>
                            <imageName>rest-service-demo-static</imageName>
			    <!-- <mainClass>${exec.mainClass}</mainClass> -->
                            <buildArgs>
                                <buildArg>--static</buildArg>
                                <buildArg>--libc=musl</buildArg>
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>

